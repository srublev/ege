"""
Задание 27 № 15812

Дан набор из N целых положительных чисел. Из этих чисел формируются все возможные пары (парой считаются два
элемента, которые находятся на разных местах в наборе, порядок чисел в паре не учитывается), в каждой паре
вычисляются сумма и произведение элементов. Необходимо определить количество пар, у которых сумма нечётна, а
произведение делится на 3.
Напишите эффективную по времени и по памяти программу для решения этой задачи.
Программа считается эффективной по времени, если при увеличении количества исходных чисел N в k раз время
работы программы увеличивается не более чем в k раз.
Программа считается эффективной по памяти, если память, необходимая для хранения всех переменных программы,
не превышает одного килобайта и не увеличивается с ростом N.
Максимальная оценка за правильную (не содержащую синтаксических ошибок и дающую правильный ответ при
любых допустимых входных данных) программу, эффективную по времени и по памяти, — 4 балла.
Максимальная оценка за правильную программу, эффективную только по времени или только по памяти, — 3 балла.
Максимальная оценка за правильную программу, не удовлетворяющую требованиям эффективности, — 2 балла.
Вы можете сдать одну или две программы решения задачи. Если Вы сдадите две программы, каждая из них будет
оцениваться независимо от другой, итоговой станет бо́льшая из двух оценок.
Перед текстом программы кратко опишите алгоритм решения. Укажите использованный язык программирования и его
версию.
Описание входных и выходных данных.
В первой строке входных данных задаётся количество чисел N (1 ≤ N ≤ 1000). В каждой из последующих N строк
записано одно натуральное число, не превышающее 100.
Пример входных данных:
4
1
2
3
4
Пример выходных данных для приведённого выше примера входных данных:
2

"""

def main():
    number_of_elements = int(input("Введите количество элементов: "))
    odd_devisable_3 = 0  # Нечетные, делящиеся на 3
    even_devisable_3 = 0  # Четные, делящиеся на 3
    #odd_not_devisable_3 = 0  # Нечетные, не делящиеся на 3
    even_not_devisable_3 = 0  # Четные, не делящиеся на 3
    odd = 0

    for i in range(number_of_elements):
        value = int(input("Введите элемент ({}/{}): ".format(i+1, number_of_elements)))
        if value % 2 == 0:
            # even
            if value % 3 == 0:
                even_devisable_3 += 1
            else:
                even_not_devisable_3 += 1
        else:
            # odd
            if value % 3 == 0:
                odd_devisable_3 += 1

            odd += 1

    total_number = odd_devisable_3 * even_not_devisable_3 + even_devisable_3 * odd

    print(total_number)

if __name__ == '__main__':
    main()
