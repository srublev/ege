"""
Задание 27 № 9708
Последовательность натуральных чисел характеризуется числом Х — наибольшим числом, кратным
14 и являющимся произведением двух элементов последовательности с различными номерами.

Вам предлагаются два задания, связанные с этой задачей: задание А и задание Б. Вы можете решать оба
задания А и Б или одно из них по своему выбору.
Итоговая оценка выставляется как максимальная из оценок за задания А и Б. Если решение одного из
заданий не представлено, то считается, что оценка за это задание составляет 0 баллов.
Задание Б является усложненным вариантом задания А, оно содержит дополнительные требования к
программе.

А. Напишите на любом языке программирования программу для решения поставленной задачи, в
которой входные данные будут запоминаться в массиве, после чего будут проверены все возможные
пары элементов.
Перед программой укажите версию языка программирования. Обязательно укажите, что программа
является решением задания А. Максимальная оценка за выполнение задания А – 2 балла.

Б. Напишите программу для решения поставленной задачи, которая будет эффективна как по времени,
так и по памяти (или хотя бы по одной из этих характеристик).
Программа считается эффективной по времени, если время работы программы пропорционально
количеству элементов последовательности N, т.е. при увеличении N в k раз время работы программы
должно увеличиваться не более чем в k раз.
Обязательно укажите, что программа является решением задания Б.

Перед текстом программы кратко опишите используемый Вами алгоритм решения.
На вход программе в первой строке подаётся количество чисел N. В каждой из последующих N строк
записано одно натуральное число, не превышающее 1000.
Пример входных данных:
5
40
1000
7
28
55
Пример выходных данных для приведённого выше примера входных данных:
28000

"""
from unittest import TestCase


def func_27_9708(sequence):
    """
    Функция вычисляет максимальное число согласно заданию

    :param sequence: последовательность чисел
    :return: искомое число
    """
    max_value = 0
    for i in range(len(sequence) - 1):
        for k in range(i + 1, len(sequence) - 1):
            current = sequence[i] * sequence[k]
            if (current % 14 == 0) and (current > max_value):
                max_value = current

    return max_value


def load_console_input():
    """
    Функция получает из консоли входные параметры для расчетов

    :return: последовательность чисел
    """
    print("Введите количество элементов: ", end='')
    number_of_elements = input()
    sequence = []
    for i in range(int(number_of_elements)):
        print("Введите элемент ({}/{}): ".format(i+1, number_of_elements), end='')
        element = int(input())
        sequence.append(element)

    return sequence

    pass

if __name__ == '__main__':
    console_input = load_console_input()
    result = func_27_9708(console_input)
    print("Результат: {}".format(result))

# Unittests
from unittest import TestCase

class TestFunc_27_9708(TestCase):
    def test_func_27_9708(self):
        self.assertEqual(28000, func_27_9708([40,1000,7,28,55]))
